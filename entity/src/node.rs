//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use crate::date_serializer::human_readable_opt;
use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "node")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub r#type: String,
    pub title: Option<String>,
    pub url: Option<String>,
    #[serde(with = "human_readable_opt")]
    pub created: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::telegram::Entity")]
    Telegram,
}

impl Related<super::telegram::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Telegram.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
