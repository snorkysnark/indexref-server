//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

use crate::types::{NodeType, RelativePathSql};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "node")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub r#type: NodeType,
    pub title: Option<String>,
    pub subtype: Option<String>,
    pub url: Option<String>,
    pub icon: Option<String>,
    pub created: Option<DateTime>,
    pub modified: Option<DateTime>,
    pub file: Option<RelativePathSql>,
    pub original_id: Option<String>,
    pub hash: Option<String>,
    pub parent_id: Option<i32>,
    #[sea_orm(column_type = "JsonBinary", nullable)]
    pub data: Option<Json>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::ParentId",
        to = "Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    SelfRef,
}

impl ActiveModelBehavior for ActiveModel {}
